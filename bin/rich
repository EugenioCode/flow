#!/usr/bin/env node

const { program } = require('commander');

program
  .version(require('../package').version)
  .usage('<command> [options]')
  .command('list', 'list available project templates')                                       // 列出可用项目模板
  .command('init', 'generate a new project from a template')                                 // 基于项目模板创建一个新项目
  .command('run', 'run scripts')                                                             // 运行目标项目的script脚本
  .command('install', 'install rich\'s plugin')                                              // 安装同构化配置
  .command('lint:es', 'format code according to eslint')                                     // 根据eslint格式化代码
  .command('lint:style', 'format code according to styelint')                                // 根据stylelint格式化代码
  .command('renew', 'start a new iteration')                                                 // 从远程master重新创建覆盖本地分支
  .command('branch', 'create a new branch')                                                  // 创建新的特性分支
  .command('merge', 'join two or more development histories together')                       // 合并特性分支
  .command('push', 'update remote refs along with associated objects')                       // 推送最新的代码远程
  .command('ignore', 'ignore specified file')                                                // 忽略指定文件
  .command('release', 'upgrade version no')
  .command('license', 'generate license')
  .command('fetch', 'a')
  .parse(process.argv)
