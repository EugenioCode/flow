#!/usr/bin/env node

const { program } = require('commander');
const shell = require('shelljs');
const chalk = require('chalk');
const inquirer = require('inquirer');
const { readFile } = require('../lib/utils.js');

program
  .usage('<option>')
  
program.on('--help', () => {
  console.log()
  console.log(chalk.gray('    # git push to remote'))
  console.log('    $ rich run')
  console.log()
})

function help() {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}
help()

process.on('exit', () => {
  console.log()
})

const COMMAND_TYPE = program.args[0]; // 安装的插件名称，例如: eslint
async function run() {
  let config = await readFile(`${process.cwd()}/script.json`);
  config = config ? JSON.parse(config) : {};
 
  if (Object.keys(config.scripts).includes(COMMAND_TYPE)) {
    const scripts = config.scripts[COMMAND_TYPE]
    let index = -1, answer = {}
    while(++index < scripts.length) {
      if (Array.isArray(scripts[index])) {
        answer[index] = (await inquirer.prompt([{
          name: 'option',
          type: 'list',
          message: scripts[index][0],
          choices: scripts[index][1],
          default: 0
        }])).option
      }
    }
  
    let shellCommand = config.scripts[COMMAND_TYPE]
      .reduce((command, keyword, index) => {
        return command += ` ${answer[index] ?? keyword}`
      }, '')
      console.log(shellCommand)
      shell.exec(shellCommand)
  }
}
run()