#!/usr/bin/env node
const { program } = require('commander');
const chalk = require('chalk');
const { hasLocalChanged, isRemoteBranch, command, gitBranchIs } = require('../lib/utils')

program
  .name('rich')
  .usage('merge <branch-name>')
  .on('--help', () => {
    console.log()
    console.log(chalk.gray('    # merge git\'s branch'))
    console.log('    $ rich merge feature-t1')
    console.log()
  })
  .on('exit', console.log)
  .parse(process.argv)

function help () {
 if (program.args.length < 1) return program.help()
}

help()

let branchName = program.args[0];

async function run () {
  const hasChange = await hasLocalChanged()
  if (hasChange) {
    console.log('There are uncommitted codes')
    return;
  }
  try {
    // 默认git merge 采用 fast-forward
    command(`git merge ${branchName} --squash`)
  } catch (err) {
    return
  }
    // 当前是否是master分支
  const isMasterBranch = await gitBranchIs('master')
  if (!isMasterBranch) process.exit(0)
  // 当前合入的分支是否是远程分支
  const isRemote = await isRemoteBranch(branchName)
  if (!isRemote) process.exit(0)
  if (isMasterBranch && isRemote) {
    await command(`git push origin -d ${branchName}`)
    console.log(chalk.green(`Deleted remote branch named ${branchName}`))
   }
}

run()